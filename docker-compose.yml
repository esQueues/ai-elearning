version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    env_file:
      - ./envs/containers.env
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      app-network:
        ipv4_address: 192.168.10.5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./envs/containers.env
    networks:
      app-network:
        ipv4_address: 192.168.10.4
    ports:
      - "8080:8080"

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - backend
    networks:
      app-network:
        ipv4_address: 192.168.10.3

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      app-network:
        ipv4_address: 192.168.10.2

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
